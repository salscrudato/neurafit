name: Deploy to Firebase

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deployment target'
        required: true
        default: 'hosting'
        type: choice
        options:
          - hosting
          - functions
          - hosting,functions

# Prevent concurrent deployments
concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://neurastack.ai
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-deploy-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deploy-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create .env file
        run: |
          cat > .env << EOF
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          VITE_APP_ENV=production
          VITE_SENTRY_DSN=${{ secrets.VITE_SENTRY_DSN }}
          VITE_ENABLE_SENTRY=true
          VITE_ADAPTIVE_PERSONALIZATION_ENABLED=true
          VITE_ADAPTIVE_FEEDBACK_UI_ENABLED=true
          VITE_ADAPTIVE_CALIBRATION_ENABLED=true
          VITE_ADAPTIVE_TELEMETRY_ENABLED=true
          VITE_ENABLE_ANALYTICS=true
          VITE_ENABLE_ERROR_TRACKING=true
          VITE_WORKOUT_FN_URL=${{ secrets.VITE_WORKOUT_FN_URL }}
          EOF
          echo "✅ Environment file created"
      
      - name: Validate environment variables
        run: |
          echo "🔍 Validating required environment variables..."
          REQUIRED_VARS=(
            "VITE_FIREBASE_API_KEY"
            "VITE_FIREBASE_AUTH_DOMAIN"
            "VITE_FIREBASE_PROJECT_ID"
            "VITE_FIREBASE_STORAGE_BUCKET"
            "VITE_FIREBASE_MESSAGING_SENDER_ID"
            "VITE_FIREBASE_APP_ID"
          )
          
          MISSING_VARS=()
          for var in "${REQUIRED_VARS[@]}"; do
            if [ -z "$(grep "^$var=" .env | cut -d'=' -f2)" ]; then
              MISSING_VARS+=("$var")
            fi
          done
          
          if [ ${#MISSING_VARS[@]} -gt 0 ]; then
            echo "❌ Missing required environment variables:"
            printf '%s\n' "${MISSING_VARS[@]}"
            exit 1
          fi
          
          echo "✅ All required environment variables are set"
      
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Verify build output
        run: |
          echo "📦 Verifying build output..."
          
          # Check dist directory exists
          if [ ! -d "dist" ]; then
            echo "❌ dist directory not found!"
            exit 1
          fi
          
          # Check index.html exists
          if [ ! -f "dist/index.html" ]; then
            echo "❌ index.html not found!"
            exit 1
          fi
          
          # Check service worker exists
          if [ ! -f "dist/sw.js" ]; then
            echo "❌ Service worker not found!"
            exit 1
          fi
          
          # Check manifest exists
          if [ ! -f "dist/manifest.json" ]; then
            echo "❌ manifest.json not found!"
            exit 1
          fi
          
          echo "✅ Build output verified"
          echo ""
          echo "📊 Build statistics:"
          du -sh dist/
          echo ""
          echo "📁 Build contents:"
          ls -lh dist/
      
      - name: Install Firebase Functions dependencies
        if: contains(github.event.inputs.deploy_target, 'functions') || github.event.inputs.deploy_target == '' && github.ref == 'refs/heads/main'
        working-directory: functions
        run: npm ci
      
      - name: Build Firebase Functions
        if: contains(github.event.inputs.deploy_target, 'functions') || github.event.inputs.deploy_target == '' && github.ref == 'refs/heads/main'
        working-directory: functions
        run: npm run build
      
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: neurafit-ai-2025
          channelId: live
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
      
      - name: Authenticate with Google Cloud
        if: contains(github.event.inputs.deploy_target, 'functions') || github.event.inputs.deploy_target == '' && github.ref == 'refs/heads/main'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Deploy Functions (if needed)
        if: contains(github.event.inputs.deploy_target, 'functions') || github.event.inputs.deploy_target == '' && github.ref == 'refs/heads/main'
        run: |
          npx firebase-tools deploy --only functions --project neurafit-ai-2025 --non-interactive
      
      - name: Verify deployment
        run: |
          echo "✅ Deployment completed successfully!"
          echo ""
          echo "🌐 Your app is now live at:"
          echo "   • https://neurafit-ai-2025.web.app"
          echo "   • https://neurafit-ai-2025.firebaseapp.com"
          echo "   • https://neurastack.ai"
          echo ""
          echo "📊 Deployment details:"
          echo "   • Branch: ${{ github.ref_name }}"
          echo "   • Commit: ${{ github.sha }}"
          echo "   • Triggered by: ${{ github.actor }}"
          echo ""
          echo "💡 Next steps:"
          echo "   • Clear browser cache to see changes"
          echo "   • Service worker will auto-update within 30 seconds"
          echo "   • Monitor Sentry for any errors"
      
      - name: Create deployment summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Status:** Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🌐 Live URLs" >> $GITHUB_STEP_SUMMARY
          echo "- [neurastack.ai](https://neurastack.ai)" >> $GITHUB_STEP_SUMMARY
          echo "- [neurafit-ai-2025.web.app](https://neurafit-ai-2025.web.app)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Build Info" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build time:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Bundle Size" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          du -sh dist/ >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "## ❌ Deployment Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The deployment to Firebase failed. Please check the logs above for details." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Common issues:" >> $GITHUB_STEP_SUMMARY
          echo "- Missing or invalid environment variables" >> $GITHUB_STEP_SUMMARY
          echo "- Build errors" >> $GITHUB_STEP_SUMMARY
          echo "- Firebase service account permissions" >> $GITHUB_STEP_SUMMARY
          echo "- Network connectivity issues" >> $GITHUB_STEP_SUMMARY

